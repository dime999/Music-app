// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicApp;

namespace MusicApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220209191335_ss")]
    partial class ss
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicApp.Entiteti.Kategorija", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("MusicApp.Entiteti.Pjesma", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumEditovanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumUnosaPjesme")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Favorit")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("NazivIzvodjaca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("kategorija_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("kategorija_id");

                    b.ToTable("Pjesme");
                });

            modelBuilder.Entity("MusicApp.Entiteti.PjesmaKategorija", b =>
                {
                    b.Property<int>("PjesmaId")
                        .HasColumnType("int");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.HasKey("PjesmaId", "KategorijaId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("PjesmaKategorije");
                });

            modelBuilder.Entity("MusicApp.Entiteti.Pjesma", b =>
                {
                    b.HasOne("MusicApp.Entiteti.Kategorija", "kategorija")
                        .WithMany()
                        .HasForeignKey("kategorija_id");

                    b.Navigation("kategorija");
                });

            modelBuilder.Entity("MusicApp.Entiteti.PjesmaKategorija", b =>
                {
                    b.HasOne("MusicApp.Entiteti.Kategorija", "Kategorija")
                        .WithMany()
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicApp.Entiteti.Pjesma", "Pjesma")
                        .WithMany()
                        .HasForeignKey("PjesmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorija");

                    b.Navigation("Pjesma");
                });
#pragma warning restore 612, 618
        }
    }
}
